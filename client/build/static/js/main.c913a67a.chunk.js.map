{"version":3,"sources":["components/TwitterCard/TwitterCard.js","helpers.js","pages/HomePage/images/discover.JPG","pages/HomePage/images/search.JPG","pages/HomePage/HomePage.js","pages/DiscoverPage/DiscoverPage.js","pages/SearchPage/SearchPage.js","components/NavBar/NavBar.js","pages/PageLayout.js","App.js","reportWebVitals.js","index.js"],"names":["TwitterCard","TweetData","id","src","user","profile_img_url","alt","name","screen_name","text","media_url","length","moment","Date","created_at","calendar","changeElementClass","elementsClass","classToSet","document","querySelectorAll","forEach","e","i","classList","remove","add","getTweetData","URL","searchTerm","a","axios","get","tweetArray","data","createTweetDivs","map","tweetData","className","HomePage","useEffect","search","discover","DiscoverPage","useState","setTweetArray","selectedOption","setSelectedOption","isLoading","setIsLoading","updateTweetArray","addClickHandlers","then","result","handleClick","event","target","option","addEventListener","type","color","height","width","SearchPage","searchInput","setSearchInput","handleEnter","code","indexOf","slice","placeholder","onInput","value","onKeyUp","NavBar","isMenuShowing","setIsMenuShowing","window","location","pathname","closeMobileMenu","getElementsByClassName","navOption","openMobileMenu","onClick","size","to","PageLayout","children","setScrollListener","getElementById","top","getBoundingClientRect","setInvisibleClass","element","pointer","querySelector","contains","style","display","Fragment","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c913a67a.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './TwitterCard.css';\r\n\r\nconst TwitterCard = ({ TweetData }) => {\r\n    return (\r\n        <div id=\"card-div\">\r\n            <div id=\"artist-info\">\r\n                <img id=\"artist-profile-img\" src={TweetData.user.profile_img_url} alt=\"Twitter user's profile img\"/>\r\n                <div>\r\n                    <div id=\"artist-name\">{TweetData.user.name}</div>\r\n                    <div id=\"artist-screen-name\">@{TweetData.user.screen_name}</div>\r\n                </div>\r\n            </div>\r\n            <div id=\"tweet-text\">{TweetData.text}</div>\r\n            <div id=\"tweet-media-div\">\r\n                {\r\n                    TweetData.media_url.length === 0 ? \"\" \r\n                        : <img id=\"tweet-media-content\" \r\n                                src={TweetData.media_url} \r\n                                alt=\"Tweet media image\"/>\r\n                }\r\n            </div>\r\n            <div id=\"tweet-timestamp\">{moment(new Date(TweetData.created_at)).calendar()}</div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default TwitterCard;","import axios from 'axios';\r\nimport TwitterCard from './components/TwitterCard/TwitterCard';\r\n\r\nconst changeElementClass = (id, elementsClass, classToSet) => {\r\n    const navOptions = document.querySelectorAll(elementsClass);\r\n    navOptions.forEach((e, i) => {\r\n        if(e.id === id){\r\n            e.classList.add(classToSet);\r\n            return;\r\n        }\r\n        e.classList.remove(classToSet);\r\n    })\r\n}\r\n\r\nconst getTweetData = async (URL, searchTerm) => {\r\n    const tweetArray = await axios.get(`${URL}=${searchTerm}`);\r\n    return tweetArray.data\r\n}\r\n\r\nconst createTweetDivs = (tweetArray) => {\r\n    return tweetArray.map((tweetData, i) => {\r\n        if(i === 0) {\r\n            return  <div key={i} className=\"page-content in-view scroll-div\">\r\n                        <TwitterCard TweetData={tweetData} />\r\n                    </div>\r\n        }\r\n        if(i === (tweetArray.length - 1)) {\r\n            return  <div key={i} className=\"page-content scroll-div end\">\r\n                        <TwitterCard TweetData={tweetData} />\r\n                    </div>\r\n        }\r\n\r\n        return  <div key={i} className=\"page-content scroll-div\">\r\n                    <TwitterCard TweetData={tweetData} />\r\n                </div>\r\n    })\r\n}\r\n\r\nexport {changeElementClass, \r\n        createTweetDivs,\r\n        getTweetData}","export default __webpack_public_path__ + \"static/media/discover.ae2cd2b0.JPG\";","export default __webpack_public_path__ + \"static/media/search.1eea5ab3.JPG\";","import React, {useEffect} from 'react';\r\nimport {changeElementClass} from '../../helpers';\r\nimport discover from './images/discover.JPG';\r\nimport search from './images/search.JPG';\r\n\r\n\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n    useEffect(() => {\r\n        changeElementClass(\"title\", '.text-div', 'in-view')\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"home-content\">\r\n            <div id=\"title\" className=\"text-div scroll-div in-view\">\r\n                <div id=\"sub-title\">Using Twitter to Discover</div>\r\n                <div id=\"main-title\">Electronic Music</div>\r\n            </div>\r\n            <div className=\"pointer\">V</div>\r\n            <div className=\"text-div scroll-div\">\r\n                <div className=\"info-div\">\r\n                    <img src={search} className=\"info-img\" />\r\n                    <div className=\"info-text\">\r\n                        <span>Search Your Favorite DJs</span>\r\n                        <br/><br/>\r\n                        Search for specific DJs by entering their Twitter handle into the search field, then scroll through to see their latest tweets.\r\n                        Or, you can search by keyword to see what other people have to say about that topic.\r\n                    </div>  \r\n                </div>             \r\n            </div>\r\n            <div id=\"discover-div\" className=\"text-div scroll-div end\">\r\n                <div className=\"info-div\">\r\n                    <div className=\"info-text\">\r\n                        <span>Discover New EDM Artists</span>\r\n                        <br/><br/>\r\n                        Select the name of one of the my top five DJs to view their most recent tweets.\r\n                        Scroll through their latest statuses to see what they're about and discover some of their latest news and music!\r\n                    </div>\r\n                    <img src={discover} className=\"info-img\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport './DiscoverPage.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {changeElementClass, createTweetDivs, getTweetData} from '../../helpers';\r\n\r\nconst USER_URL = 'http://localhost:8080/user?username';\r\n\r\nconst DiscoverPage = () => {\r\n    const [tweetArray, setTweetArray] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState('illenium');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        updateTweetArray(USER_URL, selectedOption)\r\n        addClickHandlers();\r\n    }, [selectedOption])\r\n\r\n    const updateTweetArray = (URL, searchTerm) => {\r\n        setIsLoading(true);\r\n        getTweetData(URL, searchTerm)\r\n            .then(result => {\r\n                setIsLoading(false);\r\n                setTweetArray(result);\r\n            })\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        changeElementClass(event.target.id, '.option-button', 'selected-option');\r\n        setSelectedOption(event.target.id)\r\n    }\r\n\r\n    const addClickHandlers = () => {\r\n        document.querySelectorAll('.option-button')\r\n            .forEach(option => option.addEventListener('click', handleClick))\r\n    }\r\n\r\n    return (\r\n        <div id=\"discover-content\">\r\n            {\r\n                isLoading ?\r\n                    <div id=\"loader-div\" className=\"page-content\">\r\n                        <Loader type=\"Bars\" color=\"#FFFFFF\" height={80} width={80} />\r\n                    </div>\r\n                :   createTweetDivs(tweetArray)\r\n            }\r\n            {\r\n                tweetArray.length <= 1 ? \r\n                    <div className=\"pointer\"></div> \r\n                  : <div id=\"scroll-pointer\" className=\"pointer\">V</div>\r\n            }\r\n            <div id=\"artist-options\">\r\n                <div id=\"illenium\" className=\"option-button selected-option\">Illenium</div>\r\n                <div id=\"iamalanwalker\" className=\"option-button\">Alan Walker</div>\r\n                <div id=\"kygomusic\" className=\"option-button\">Kygo</div>\r\n                <div id=\"wearegalantis\" className=\"option-button\">Galantis</div>\r\n                <div id=\"KSHMRmusic\" className=\"option-button\">KSHMR</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DiscoverPage;","import React, {useState} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport './SearchPage.css';\r\nimport {createTweetDivs, getTweetData} from '../../helpers';\r\n\r\nconst KEYWORD_URL = 'http://localhost:8080/search/content?q';\r\nconst USER_URL = 'http://localhost:8080/user?username';\r\n\r\nconst SearchPage = () => {\r\n    const [tweetArray, setTweetArray] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleInput = (event) => {\r\n        setSearchInput(event.target.value);\r\n    }\r\n\r\n    const handleEnter = async (event) => {\r\n        if(event.code !== \"Enter\") return;\r\n        if(searchInput.length === 0){\r\n            setTweetArray([])\r\n            return;\r\n        } \r\n\r\n        searchInput.indexOf('@') > -1 ? \r\n            updateTweetArray(USER_URL, searchInput.slice(1))\r\n        :   updateTweetArray(KEYWORD_URL, searchInput);\r\n\r\n    }\r\n\r\n    const updateTweetArray = (URL, searchTerm) => {\r\n        setIsLoading(true);\r\n        getTweetData(URL, searchTerm)\r\n            .then(result => {\r\n                setIsLoading(false);\r\n                setTweetArray(result);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id=\"search-main\">\r\n            <div id=\"input-div\">\r\n                <input id=\"search-input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Search by @user or keyword, then Enter...\" \r\n                    onInput={handleInput}\r\n                    onKeyUp={handleEnter} />\r\n            </div>\r\n            {\r\n                isLoading ?\r\n                    <div id=\"loader-div\" className=\"page-content\">\r\n                        <Loader type=\"Bars\" color=\"#FFFFFF\" height={80} width={80} />\r\n                    </div>\r\n                :   createTweetDivs(tweetArray)\r\n            }\r\n            {\r\n                tweetArray.length <= 1 ? <div className=\"pointer\"></div> : <div id=\"scroll-pointer\" className=\"pointer\">V</div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default SearchPage;","import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FiMenu} from 'react-icons/fi';\r\nimport {changeElementClass} from '../../helpers';\r\nimport './NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    const [isMenuShowing, setIsMenuShowing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        changeElementClass(window.location.pathname, '.nav-option', 'selected')\r\n    }, [])\r\n\r\n    const handleClick = (event) => {\r\n        changeElementClass(event.target.id, '.nav-option', 'selected');\r\n        closeMobileMenu();\r\n    }\r\n\r\n    const handleMobileClick = () => {\r\n        if(isMenuShowing){\r\n            closeMobileMenu();\r\n        } else {\r\n            openMobileMenu();\r\n        }\r\n        setIsMenuShowing(!isMenuShowing);\r\n    }\r\n\r\n    const closeMobileMenu = () => {\r\n        document.getElementsByClassName(\"mobile\")[0].classList.remove('full-screen')\r\n        document.querySelectorAll('.nav-option').forEach(navOption => {\r\n            navOption.classList.remove('visible');\r\n        })\r\n    }\r\n\r\n    const openMobileMenu = () => {\r\n        document.getElementsByClassName(\"mobile\")[0].classList.add('full-screen')\r\n        document.querySelectorAll('.nav-option').forEach(navOption => {\r\n            navOption.classList.add('visible');\r\n        })\r\n    }\r\n\r\n    return(\r\n        <nav id=\"main\">\r\n            <div className=\"mobile\" onClick={handleMobileClick}><FiMenu size=\"3em\"/></div>\r\n            <Link to='/' id=\"/\" className=\"nav-option selected\" onClick={handleClick}>Home</Link>\r\n            <Link to='/search' id=\"/search\" className=\"nav-option\" onClick={handleClick}>Search</Link>\r\n            <Link to='/discover' id=\"/discover\" className=\"nav-option\" onClick={handleClick}>Discover</Link>\r\n        </nav>\r\n    )\r\n    \r\n}\r\n\r\nexport default NavBar;","import React, { useEffect }  from 'react';\r\nimport Navbar from '../components/NavBar/NavBar.js';\r\nimport './PageLayout.css'\r\n\r\nconst PageLayout = ({children}) => {\r\n    useEffect(() => {\r\n        setScrollListener();\r\n    }, [])\r\n\r\n    const setScrollListener = () => {\r\n        const container = document.getElementById('main-content');\r\n        container.addEventListener('scroll', () => {\r\n            const textContent = document.querySelectorAll('.scroll-div')\r\n            textContent.forEach((e, i) => {\r\n                const top = (e.getBoundingClientRect().top);\r\n                if(top < 200 && top > -150) {\r\n                    e.classList.add('in-view')\r\n                    setInvisibleClass(e)\r\n                } else {\r\n                    e.classList.remove('in-view');\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const setInvisibleClass = (element) => {\r\n        const pointer = document.querySelector('.pointer');\r\n        if(element.classList.contains('end')){\r\n            pointer.style.display = 'none';\r\n            return;\r\n        }\r\n        pointer.style.display = 'block';\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div id=\"body\">\r\n                <Navbar />\r\n                <div id=\"main-content\">{children}</div>\r\n                <div id=\"logo\">DROPS</div>\r\n            </div>\r\n        </ React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PageLayout;","import './App.css';\nimport {Route, BrowserRouter} from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport DiscoverPage from './pages/DiscoverPage/DiscoverPage';\nimport SearchPage from './pages/SearchPage/SearchPage';\nimport PageLayout from './pages/PageLayout';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <PageLayout>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/discover\" component={DiscoverPage} />\n        </PageLayout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}